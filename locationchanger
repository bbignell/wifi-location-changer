#!/bin/bash

# automatically change configuration of Mac OS X based on location
exec &>/usr/local/var/log/locationchanger.log
# redirect all IO to /dev/null (comment this out if you want to debug)
# exec 1>/dev/null 2>/dev/null

# get a little breather before we get data for things to settle down
sleep 1 

# get various system information
SSID=`/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport -I\
 | grep ' SSID:' | cut -d ':' -f 2 | tr -d ' '`

CURRENT_LOCATION=`scselect | grep " \* " | cut -d "(" -f 2 | cut -d ")" -f 1`
PREF_FILE="$HOME/.locationchanger"
# get a map of SSID -> locations from ~/.locationchanger
# The file should contain lines with comma-separated SSID,Location values
# A default value can be specified using the *** SSID, for example:
#    ***,Internet
#    SAP-Corporate,Corporate
#    Home Network,Home

# This will potentially return false positives for SSID that are suffixes of SSIDs in the .locationchanger file
# but at least thanks to the -F option, the matching is done on litteral string instead of regex (think of an SSID containing ^ $ [ ] * . -, assuming it is allowed)
LOOKUP_LOCATION=`grep -F "$SSID," $PREF_FILE | cut -f 2 -d ,`
DEFAULT_LOCATION=`grep '^\*\*\*,' $PREF_FILE | cut -f 2 -d ,`

# is our SSID in the map of lookup locations...
if [[ -n $LOOKUP_LOCATION ]]; then
  NEW_LOCATION="$LOOKUP_LOCATION"

# ...or if we have a non-empty default location...
elif [[ -n $DEFAULT_LOCATION ]]; then
  echo "Choosing default location: $DEFAULT_LOCATION"
  NEW_LOCATION="$DEFAULT_LOCATION"

# ...else we'll try to match the SSID and location names, e.g. SSID "My Network" matches location "MyNetwork"
else
  echo "No matching location for $SSID found in: $PREF_FILE:"
  cat $PREF_FILE

  # basic pattern matching to get all location names separated by newlines
  LOCATION_NAMES=`scselect | tail -n +2 | cut -d "(" -f 2 | cut -d ")" -f 1`

  # no brackets as we the grep will return a status code depending on whether the SSID has an own Location
  if echo "$LOCATION_NAMES" | egrep -q "^$SSID$"; then
    NEW_LOCATION="$SSID"
  else
    # auto does not seem to be working on Mac OS X Lion, but Automatic does
    if echo Automatic | grep -q "$LOCATION_NAMES"; then
      NEW_LOCATION=Automatic
    elif echo auto | grep -q "$LOCATION_NAMES"; then
      NEW_LOCATION=auto
    else
      echo "Automatic location was not found!"
      echo "The following locations are known:"
      echo "$LOCATION_NAMES"
    fi
  fi
fi

echo "New location = $NEW_LOCATION, Current location = $CURRENT_LOCATION"

if [ "x$NEW_LOCATION" != "x" -a "x$NEW_LOCATION" != "x$CURRENT_LOCATION" ]; then
    scselect "$NEW_LOCATION"
fi

